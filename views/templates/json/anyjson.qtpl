All the text outside function templates is treated as comments,
i.e. it is just ignored by quicktemplate compiler (`qtc`). It is for humans.

.
{% func WriteAnyJSON(arrJSON map[string] interface {}) %}
{% stripspace %}
 {
   {% code comma := "" %}
   {% for key, value := range  arrJSON %}
        {%s comma %}
        "{%s key %}":
     {% switch getType(value) %}
     {% case "map" %}

            [
           {% if len(value.(map[string] interface {}))>0 %}
                {%= WriteAnyJSON(value.(map[string] interface {})) %}
             {% endif %}
            ]

      {% case "array" %}

            [
           {% if len(value.([] interface {}))>0 %}
                {%= WriteArrJSON(value.([] interface {})) %}
             {% endif %}
            ]

      {% case "string" %}
         "{%s= value.(string) %}"
      {% case "bool" %}
         {%v value.(bool) %}
      {% case "int" %}
            {%d value.(int) %}
      {% case "float64" %}
             {%f value.(float64) %}
      {% case "nil" %}
             null
      {% default %}
            {%v value %}
     {% endswitch %}

         {% code  comma = ","
        %}
   {% endfor %}
 }
{% endstripspace %}
{% endfunc %}

{% func WriteArrJSON(arrJSON [] interface {}) %}
{% stripspace %}
 {
   {% code comma := "" %}
   {% for key, value := range  arrJSON %}
        {%s comma %}
        "{%d key %}":
     {% switch getType(value) %}
      {% case "array" %}

            [
           {% if len(value.([] interface {}))>0 %}
                {%= WriteAnyJSON(value.(map[string] interface {})) %}
             {% endif %}
            ]

      {% case "string" %}
         "{%s= value.(string) %}"
      {% case "bool" %}
         {%v value.(bool) %}
      {% case "int" %}
            {%d value.(int) %}
      {% case "float64" %}
             {%f value.(float64) %}
      {% case "nil" %}
             null
      {% default %}
            {%v value %}
     {% endswitch %}

         {% code  comma = ","
        %}
   {% endfor %}
 }
{% endstripspace %}
{% endfunc %}