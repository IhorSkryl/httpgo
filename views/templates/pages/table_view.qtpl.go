// This file is automatically generated by qtc from "table_view.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line views/templates/pages/table_view.qtpl:1
package pages

//line views/templates/pages/table_view.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

// All the text outside function templates is treated as comments,
// i.e. it is just ignored by quicktemplate compiler (`qtc`). It is for humans.
//
// показ табличных данных.

//line views/templates/pages/table_view.qtpl:5
import (
	"database/sql"
	"github.com/ruslanBik4/httpgo/views/templates/forms"
	"log"
	"strings"
)

//line views/templates/pages/table_view.qtpl:12
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/templates/pages/table_view.qtpl:12
func StreamShowTable(qw422016 *qt422016.Writer, tableName string, ns forms.FieldsTable, rows *sql.Rows) {
	//line views/templates/pages/table_view.qtpl:12
	qw422016.N().S(`
        `)
	//line views/templates/pages/table_view.qtpl:14
	columns, err := rows.Columns()
	if err != nil {
		log.Println(err)
	}

	var row []interface{}

	rowField := make([]*sql.NullString, len(columns))

	for idx, _ := range columns {

		rowField[idx] = new(sql.NullString)
		row = append(row, rowField[idx])
	}

	//line views/templates/pages/table_view.qtpl:28
	qw422016.N().S(`
<link href="/tables.css" rel="stylesheet">

<table class="table table-striped table-bordered table-hover table-condensed">
    <thead>
        <tr>
            `)
	//line views/templates/pages/table_view.qtpl:34
	for idx, _ := range columns {
		//line views/templates/pages/table_view.qtpl:34
		qw422016.N().S(`
                <td>`)
		//line views/templates/pages/table_view.qtpl:36
		fieldStruct := ns.FindField(columns[idx])
		titleFull, titleLabel, _, _, _ := fieldStruct.GetColumnTitles()
		if len(titleLabel) > 22 {
			titleLabel = titleLabel[:22]
			// titleLabel += "..."
		}

		//line views/templates/pages/table_view.qtpl:42
		qw422016.N().S(`
                    <a href="#" title="`)
		//line views/templates/pages/table_view.qtpl:43
		qw422016.E().S(titleFull)
		//line views/templates/pages/table_view.qtpl:43
		qw422016.N().S(`">`)
		//line views/templates/pages/table_view.qtpl:43
		qw422016.E().S(titleLabel)
		//line views/templates/pages/table_view.qtpl:43
		qw422016.N().S(`</a>
                </td>
            `)
		//line views/templates/pages/table_view.qtpl:45
	}
	//line views/templates/pages/table_view.qtpl:45
	qw422016.N().S(`
        </tr>
    </thead>
    <tbody>
        `)
	//line views/templates/pages/table_view.qtpl:49
	for rows.Next() {
		//line views/templates/pages/table_view.qtpl:49
		qw422016.N().S(`
            `)
		//line views/templates/pages/table_view.qtpl:51
		err = rows.Scan(row...)

		if err != nil {
			log.Println(err)
			continue
		}

		//line views/templates/pages/table_view.qtpl:58
		qw422016.N().S(`
        <tr>
            `)
		//line views/templates/pages/table_view.qtpl:60
		for idx, field := range rowField {
			//line views/templates/pages/table_view.qtpl:60
			qw422016.N().S(`
                `)
			//line views/templates/pages/table_view.qtpl:61
			if idx == 0 {
				//line views/templates/pages/table_view.qtpl:61
				qw422016.N().S(`
                    <td><a href="/admin/row/edit/?table=`)
				//line views/templates/pages/table_view.qtpl:62
				qw422016.E().S(tableName)
				//line views/templates/pages/table_view.qtpl:62
				qw422016.N().S(`&id=`)
				//line views/templates/pages/table_view.qtpl:62
				qw422016.E().S(field.String)
				//line views/templates/pages/table_view.qtpl:62
				qw422016.N().S(`" target="content">`)
				//line views/templates/pages/table_view.qtpl:62
				qw422016.E().S(field.String)
				//line views/templates/pages/table_view.qtpl:62
				qw422016.N().S(`</a>
                    </td>
                `)
				//line views/templates/pages/table_view.qtpl:64
			} else {
				//line views/templates/pages/table_view.qtpl:64
				qw422016.N().S(`
                    <td>
                    `)
				//line views/templates/pages/table_view.qtpl:66
				if field.Valid {
					//line views/templates/pages/table_view.qtpl:66
					qw422016.N().S(`
                        `)
					//line views/templates/pages/table_view.qtpl:68
					fieldStruct := ns.FindField(columns[idx])
					key := columns[idx]
					val := field.String
					required, tablePrefix, titleLabel := "", "", ""

					//line views/templates/pages/table_view.qtpl:72
					qw422016.N().S(`
                        `)
					//line views/templates/pages/table_view.qtpl:73
					if key == "parent_id" {
						//line views/templates/pages/table_view.qtpl:73
						qw422016.N().S(`
                            `)
						//line views/templates/pages/table_view.qtpl:74
						fieldStruct.StreamRenderParentSelect(qw422016, ns.Name, key, val, titleLabel, required)
						//line views/templates/pages/table_view.qtpl:74
						qw422016.N().S(`
                        `)
						//line views/templates/pages/table_view.qtpl:75
					} else if strings.HasPrefix(key, "id_") {
						//line views/templates/pages/table_view.qtpl:75
						qw422016.N().S(`
                            `)
						//line views/templates/pages/table_view.qtpl:76
						fieldStruct.StreamRenderForeignSelect(qw422016, tablePrefix, key, val, titleLabel, required)
						//line views/templates/pages/table_view.qtpl:76
						qw422016.N().S(`
                        `)
						//line views/templates/pages/table_view.qtpl:77
					} else if strings.HasPrefix(key, "setid_") {
						//line views/templates/pages/table_view.qtpl:77
						qw422016.N().S(`
                            `)
						//line views/templates/pages/table_view.qtpl:78
						fieldStruct.StreamRenderMultiSelect(qw422016, &ns, tablePrefix, key, val, "См. ", required)
						//line views/templates/pages/table_view.qtpl:78
						qw422016.N().S(`
                        `)
						//line views/templates/pages/table_view.qtpl:79
					} else {
						//line views/templates/pages/table_view.qtpl:79
						qw422016.N().S(`
                            `)
						//line views/templates/pages/table_view.qtpl:80
						qw422016.E().S(field.String)
						//line views/templates/pages/table_view.qtpl:80
						qw422016.N().S(`
                        `)
						//line views/templates/pages/table_view.qtpl:81
					}
					//line views/templates/pages/table_view.qtpl:81
					qw422016.N().S(`
                    `)
					//line views/templates/pages/table_view.qtpl:82
				}
				//line views/templates/pages/table_view.qtpl:82
				qw422016.N().S(`
                    </td>
                `)
				//line views/templates/pages/table_view.qtpl:84
			}
			//line views/templates/pages/table_view.qtpl:84
			qw422016.N().S(`
            `)
			//line views/templates/pages/table_view.qtpl:85
		}
		//line views/templates/pages/table_view.qtpl:85
		qw422016.N().S(`

        </tr>
        `)
		//line views/templates/pages/table_view.qtpl:88
	}
	//line views/templates/pages/table_view.qtpl:88
	qw422016.N().S(`
    </tbody>

</table>

`)
//line views/templates/pages/table_view.qtpl:93
}

//line views/templates/pages/table_view.qtpl:93
func WriteShowTable(qq422016 qtio422016.Writer, tableName string, ns forms.FieldsTable, rows *sql.Rows) {
	//line views/templates/pages/table_view.qtpl:93
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line views/templates/pages/table_view.qtpl:93
	StreamShowTable(qw422016, tableName, ns, rows)
	//line views/templates/pages/table_view.qtpl:93
	qt422016.ReleaseWriter(qw422016)
//line views/templates/pages/table_view.qtpl:93
}

//line views/templates/pages/table_view.qtpl:93
func ShowTable(tableName string, ns forms.FieldsTable, rows *sql.Rows) string {
	//line views/templates/pages/table_view.qtpl:93
	qb422016 := qt422016.AcquireByteBuffer()
	//line views/templates/pages/table_view.qtpl:93
	WriteShowTable(qb422016, tableName, ns, rows)
	//line views/templates/pages/table_view.qtpl:93
	qs422016 := string(qb422016.B)
	//line views/templates/pages/table_view.qtpl:93
	qt422016.ReleaseByteBuffer(qb422016)
	//line views/templates/pages/table_view.qtpl:93
	return qs422016
//line views/templates/pages/table_view.qtpl:93
}
